name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      
      - name: Verify version consistency
        run: |
          PYPROJECT_VERSION=$(python -c "import re; content = open('pyproject.toml').read(); match = re.search(r'version = [\"\x27](.+?)[\"\x27]', content); print(match.group(1) if match else '')")
          INIT_VERSION=$(python -c "import re; content = open('pyalgoture/__init__.py').read(); match = re.search(r'__version__ = [\"\x27](.+?)[\"\x27]', content); print(match.group(1) if match else '')")
          if [ "$PYPROJECT_VERSION" != "$INIT_VERSION" ]; then
            echo "ERROR: Version mismatch!"
            echo "pyproject.toml version: $PYPROJECT_VERSION"
            echo "__init__.py version: $INIT_VERSION"
            exit 1
          fi
          echo "âœ“ Versions match: $PYPROJECT_VERSION"
      
      - name: Build package
        run: python -m build
      
      - name: Check package
        run: twine check dist/*
      
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*

